name: "Develop CI/CD"

on:
  push:
    branches: [suite-menu]

jobs:
  build:
    name: IVA Build
    runs-on: ubuntu-20.04
    steps:
      - name: Clone IVA repository with JSOrolla
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install bower dependecy
        run: npm install bower
      - name: Run npm ci
        run: npm ci
      - name: Run npm install
        run: npm init -y && npm install
      - name: Build IVA app
        run: npm run build
      - name: Upload webpack artifact
        uses: actions/upload-artifact@v2
        with:
          name: webpack-artifact
          path: build
          retention-days: 2

  test:
    name: IVA Tests
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        node-version: [ 12.x, 14.x ]
        browsers: [chrome, firefox]
    steps:
      - name: Clone IVA repository with JSOrolla
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node.version }}
      - name: Install bower dependency
        run: npm install bower
      - name: Run npm install
        run: npm init -y && npm install
      - name: Test Iva - Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run serve
          browser: ${{ matrix.browsers }}
          spec: cypress/integration/001-header-bar-pre-login.spec.js
          wait-on: http://localhost:3000
      - name: Upload Screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Upload Video
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos


  # deploy:
  #   name: Publish Docker image in Docker Hub repository
  #   runs-on: ubuntu-20.04
  #   needs: test
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download webpack artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: webpack-artifact
  #         path: build
  #     - name: Read package.json
  #       uses: "tyankatsu0105/read-package-version-actions@v1"
  #       id: package-version
  #     - name: Show version number
  #       run: echo "Version is ${{ steps.package-version.outputs.version }}"
  #     - name: Login to dockerhub
  #       run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_HUB_USER }} --password-stdin
  #     - name: Build and Publish Docker image
  #       run: python3 ./docker/docker-build.py push --images app --tag 2.1.0-exp
